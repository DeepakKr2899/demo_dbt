# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "Project_harvest"
version: "1.0.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "Project_harvest"

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In dbt, the default materialization for a model is a view. This means, when you run
# dbt run or dbt build, all of your models will be built as a view in your data platform.
# The configuration below will override this setting for models in the example folder to
# instead be materialized as tables. Any models you add to the root of the models folder will
# continue to be built as views. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

models:
  Project_harvest:
    # Config indicated by + and applies to all files under models/example/
    TRANSFORM:
      CLIENT_MDM:
        +materialized: table
        +transient: false
        +database: "{{ target.name }}_TRANSFORM"
        +schema: client_mdm
        +tags: client_mdm

      CUSTOMER_MDM:
        +materialized: table
        +transient: false
        +database: "{{ target.name }}_TRANSFORM"
        +schema: customer_mdm
        +tags: customer_mdm

      DIMENSION:
        +materialized: table
        +transient: false
        +database: "{{ target.name }}_TRANSFORM"
        +schema: dimension
        +tags: dimension

      FACT:
        +materialized: table
        +transient: false
        +database: "{{ target.name }}_TRANSFORM"
        +schema: fact
        +tags: fact

      PUBLIC:
        +materialized: table
        +transient: false
        +database: "{{ target.name }}_TRANSFORM"
        +schema: public
        +tags: public

snapshots:
  Project_harvest:
    +transient: false
    SALESFORCE:
      +target_database: "{{ target.name }}_PERSISTENT_STAGING"
      +target_schema: salesforce
      +tags: salesforce

    HUBSPOT:
      +target_database: "{{ target.name }}_PERSISTENT_STAGING"
      +target_schema: hubspot
      +tags: hubspot

    RECURLY:
      +target_database: "{{ target.name }}_PERSISTENT_STAGING"
      +target_schema: recurly
      +tags: recurly

    ORACLE:
      +target_database: "{{ target.name }}_PERSISTENT_STAGING"
      +target_schema: oracle
      +tags: oracle

    NETSUITE_SUITEANALYTICS:
      +target_database: "{{ target.name }}_PERSISTENT_STAGING"
      +target_schema: netsuite_suiteanalytics
      +tags: netsuite_suiteanalytics

    ECOMM_CWD_SMD_DBO:
      +target_database: "{{ target.name }}_PERSISTENT_STAGING"
      +target_schema: ecomm_cwd_smd_dbo
      +tags: ecomm_cwd_smd_dbo